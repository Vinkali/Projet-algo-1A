




/* demander au prof :
 * si il faut écrire les @see get et set dans la javadoc
 * si on peut éviter le crash quand l'utilisateur tape autre chose que ce que le scanner cherche (comme une lettre au lieu d'un int)
 */




import java.util.Scanner;
public class Jeu{
    
    public static void main(String [] args){
        Personnage j1=new Personnage("joueur 1");
        Personnage j2=new Personnage("joueur 2");
        
        System.out.println(regles());
        System.out.println();
        System.out.println(descriptionPersos());
        System.out.println();
        
        j1 = choixPerso(j1);
        j2 = choixPerso(j2);
        
        String [][] plateau = creationPlateau();
        placementJoueurAlea(plateau, "J1", "J2"); //Place les joueurs de maniere aléatoire sur le plateau
        
        affichePlateau(plateau);
        
        afficheVie(j1);
        afficheVie(j2);
    }
    
    /** Cette méthode stocke le texte des règles
     */
    public static String regles(){
        return "les règles seront détaillées ici";
    }
    
    /** Cette méthode stocke le texte de description des personnages
     */
    public static String descriptionPersos(){
        return "ceci sera une description des personnages avec un numéro associé à chacun";
    }
    
    /** Cette méthode initialise les caractéristique d'un personnage à partir d'une liste de modèles prédéfinis
     * 
     * @param j le personnage du joueur, qui n'a pas encore de caractéristiques
     * @return j le personnage du joueur initialisé d'après un modèle
     */
    public static Personnage choixPerso(Personnage j){
        Scanner sc = new Scanner(System.in);
        boolean confirmation = false;
        
        while(confirmation == false || j.getNom() == null){
            System.out.println(j.getJoueur()+", entre le numéro du personnage que tu mèneras au combat");
            
            int i = sc.nextInt();
            j = new Personnage(j.getJoueur(),i);
            
            if(j.getNom() != null){
                System.out.println("Tu veux incarner "+j.getNom()+" ? entre 1 si oui et 2 si non");
                if(sc.nextInt()==1){
                    confirmation=true;
                }else{
                    System.out.println("Non ? D'accord");
                }
            }
        }
        System.out.println("Entre dans l'arène, ô "+j.getNom()+" !");
        System.out.println();
        return j;
    }
    
    public static String [][] creationPlateau(){
        String [][] p= new String[12][12];
        for(int i=0; i<p.length; i++){
            for (int j=0; j<p[0].length; j++){
                if((i==0)||(i==11)){
                    p[i][j]=" - "; //On délimite le plateau pour qu'il soit bien visible par les joueurs
                }else if((i==0)||(i==11)){
                    p[i][j]=" | ";
                }else{
                    p[i][j]="  "; //L'intérieur du plateau est vide
                }
            System.out.println();
            }
        }
    return p;
    }
    
    public static void placementJoueurAlea(String[][] plateau, String J1, String J2){
        //A remplir
    }
    
    /** Cette méthode affiche l'état actuel du plateau de jeu
     * @param p le plateau à afficher
     */
    public static void affichePlateau(String[][] p){
        for(int i=0; i<p.length; i++){
            for(int j=0; j<p[0].length; j++){
                System.out.print(p[i][j]);
            }
            System.out.println();
        }
    }
    
    /** Cette méthode affiche le nombre de points de vie restants d'un personnage
     * @param p le personnage dont on veut afficher les pV
     */
    public static void afficheVie(Personnage p){
        System.out.println("PV "+p.getJoueur()+" :");
        for(int i=0; i<p.getPV(); i++){
            System.out.print("*");
        }
        System.out.println();
    } 
}
