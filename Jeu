




/* demander au prof :
 * si il faut écrire les @see get et set dans la javadoc
 * si on peut éviter le crash quand l'utilisateur tape autre chose que ce que le scanner cherche (comme une lettre au lieu d'un int)
 */




import java.util.Scanner;
public class Jeu{
    
    public static void main(String [] args){
        Personnage j1=new Personnage("joueur 1");
        Personnage j2=new Personnage("joueur 2");
        
        System.out.println(regles());
        System.out.println();
        System.out.println(descriptionPersos());
        System.out.println();
        
        j1 = choixPerso(j1);
        j2 = choixPerso(j2);
        
        String [][] plateau = creationPlateau();
        placementJoueurAlea(plateau, j1, j2); //Place les joueurs de maniere aléatoire sur le plateau
	creationObstacle(plateau, j1, j2);
        
        affichePlateau(plateau);
        
        afficheVie(j1);
        afficheVie(j2);
        
        if(j1.getNom()==j2.getNom()){
            System.out.println("Quelle est cette sorcellerie ? "+j1.getNom()+" affronte son double !");
            System.out.println();
        }
        deterAleaPremier(j1,j2);
        
    }
    
    /** Cette méthode stocke le texte des règles
     */
    public static String regles(){
        return "les règles seront détaillées ici";
    }
    
    /** Cette méthode stocke le texte de description des personnages
     */
    public static String descriptionPersos(){
        return "ceci sera une description des personnages avec un numéro associé à chacun";
    }
    
    /** Cette méthode initialise les caractéristique d'un personnage à partir d'une liste de modèles prédéfinis
     * 
     * @param j le personnage du joueur, qui n'a pas encore de caractéristiques
     * @return j le personnage du joueur initialisé d'après un modèle
     */
    public static Personnage choixPerso(Personnage j){
        Scanner sc = new Scanner(System.in);
        boolean confirmation = false;
        
        while(!confirmation || j.getNom() == null){
            System.out.println(j.getJoueur()+", entre le numéro du personnage que tu mèneras au combat");
            
            int i = sc.nextInt();
            j = new Personnage(j.getJoueur(),i);
            
            if(j.getNom() != null){
                System.out.println("Tu veux incarner "+j.getNom()+" ? entre 1 si oui et 2 si non");
                if(sc.nextInt()==1){
                    confirmation=true;
                }else{
                    System.out.println("Non ? D'accord");
                }
            }
        }
        System.out.println("Entre dans l'arène, ô "+j.getNom()+" !");
        System.out.println();
        return j;
    }
    
    public static String [][] creationPlateau(){
        String [][] p= new String[17][17];
        for(int i=0; i<p.length; i++){
            for (int j=0; j<p[0].length; j++){
                if((i==0)||(i==16)){
                    p[i][j]="---"; //On délimite le plateau pour qu'il soit bien visible par les joueurs
                }else if((j==0)){
                    p[i][j]="|  ";
                }else if((j==16)){
                    p[i][j]="  |";
                }else{
                    p[i][j]=" . "; //L'intérieur du plateau est rempli de points pour bien distinguer les différentes positions, et les distances
                }
            System.out.println();
            }
        }
    return p;
    }
    
    /** Cette méthode place les joueurs de manière aléatoire au début du jeu
     * @param le plateau de jeu "vide", les joueurs J1 et J2  
     */
    public static void placementJoueurAlea(String[][] plateau, Personnage j1, Personnage j2){
        while(distanceSecurite(j1, j2)==false){
		j1.setX((int)(Math.random()*14+1));
		j1.setY((int)(Math.random()*14+1));
		j2.setX((int)(Math.random()*14+1));
		j2.setY((int)(Math.random()*14+1));
	}
		plateau[j1.getX()][j1.getY()] = "J1 ";
		plateau[j2.getX()][j2.getY()] = "J2 ";
    }
    
    /** Cette méthode vérfie si les deux joueurs ne sont pas 
     * trop proches pour le début de partie 
     * et renvoie l'info sous forme de booléen
     * @param les joueurs j1 et j2
     * @return b le booléen
     */
    public static boolean distanceSecurite(Personnage j1, Personnage j2){
	boolean b = true;
	for(int i = j1.getX() - 4; i<= j1.getX() + 4; i++){
		for(int j = j1.getY() - 4; j<= j1.getY() + 4; j++){
			if((i==j2.getX())&&(j==j2.getY())){
				b= false;
			}
		}
	}
	return b;
    }
    
    /** Cette méthode crée 4 obstacles (buissons) aléatoirement sur le plateau
     * @param p le plateau, les joueurs j1 et j2
     */
    public static void creationObstacle(String[][] p, Personnage j1, Personnage j2){
	int obstacle=0;
	while(obstacle <= 3){
		int a = (int) (Math.random()*12+2);
		int b = (int) (Math.random()*12+2);
		if(a!=j1.getX() && a!=j2.getX() && b!=j1.getY() && b!=j2.getY()){
			if(obstacle%2==0){
				p[a][b] = " # ";
				p[a+1][b+1] = " # ";
				p[a-1][b-1] = " # ";
			}else{
				p[a][b] = " # ";
				p[a-1][b+1] = " # ";
				p[a+1][b-1] = " # ";
			}
			obstacle ++;
		
		}
	}
    }
    
    /** Cette méthode affiche l'état actuel du plateau de jeu
     * @param p le plateau à afficher
     */
    public static void affichePlateau(String[][] p){
        for(int i=0; i<p.length; i++){
            for(int j=0; j<p[0].length; j++){
                System.out.print(p[i][j]);
            }
            System.out.println();
        }
    }
    
    /** Cette méthode affiche le nombre de points de vie restants d'un personnage
     * @param p le personnage dont on veut afficher les pV
     */
    public static void afficheVie(Personnage p){
        System.out.println("PV "+p.getJoueur()+" :");
        for(int i=0; i<p.getPV(); i++){
            System.out.print("*");
        }
        System.out.println();
        System.out.println();
    }
    
    /** Cette méthode détermine aléatoirement quel joueur commence
     * et stocke cette information dans un attribut de la classe Personnage
     * sauf si un des joueurs a trouvé l'easter egg, auquel cas il commence en premier d'office
     * @param p1 le personnage du joueur 1
     * @param p2 le personnage du joueur 2
     */
    public static void deterAleaPremier(Personnage p1,Personnage p2){
        if(p1.getJoueEnPremier() == p2.getJoueEnPremier()){
            double i = Math.random();
            if(i<0.5){
                p1.setJoueEnPremier(true);
                p2.setJoueEnPremier(false);
                System.out.println(p1.getNom()+" prend de vitesse son adversaire !");
            }else{
                p2.setJoueEnPremier(true);
                p1.setJoueEnPremier(false);
                System.out.println(p2.getNom()+" prend de vitesse son adversaire !");
            }
        }else{
            System.out.println("L'Être Suprême prend de vitesse le misérable cafard qui ose se tenir sur son chemin !");
        }
        System.out.println();
    }
}
